{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to LINDA+ This is the documentation page of the LINDA+ software. Workflow LINDA+ is a method used to identify intra- and inter-cellular interaction networks at a domain resolution, allowing to further study the effects of Alternative Splicing (AS) on signalling. It is a tool that integrates large-scale knowledge of directed joint interactions (protein-protein and Domain-Domain intra-cellular interactions) as well as structurally resolved ligand-receptor pairs from various resources with estimated transcription factor enzymatic activities based on sc-RNAseq reads (see Figure 1. ). Figure 1: LINDA+ Pipeline At the core of LINDA+ stands an optimization problem, formulated as an Integer Linear Programming (ILP), which allows for joint mechanistic analysis of inter- and intra-cellular protein interaction networks based on scRNAseq data. Dependencies Resources LINDA+ relies the following resources for performing it's analysis: Resources of protein interactions at a domain resolution level: By default, LINDA+ uses DIGGER as a resource of joint Protein-Protein (PPI) and Domain-Domain (DDI) interactions in human. This allows LINDA+ to mechanistically characterize effects that post-transcriptional processes, such as alternative splicing, might have on protein interaction networks. Resources of ligand-receptor pairs: Several ligand-receptor interaction resources have been integrated in LINDA+, including: CellChat , CellPhoneDB , CellTalkDB and LIANA . For LINDA+, we have additionally annotated extracellular domains of the receptors, through which the ligands would be able to interact. Resources of transcription factors (TF) to gene relations: LINDA+ additionally relies on known tf-to-gene relations in order to: i) Determine significantly regulated TF's based on gene-expression values for each cell-type; and ii) Identifying what kinds of ligand genes do these TF's regulate and which can then be secreted into the extra-cellular space. Two types of human tf-to-gene resources have been integrated in LINDA+: DoRothEA and TfLink . All of the above resources have been integrated in the LINDA+ R-package and details about how combinations of each type of resource can be used for a real-case application of LINDA+ can be found in the Tutorials (hyperlinked once tutorials have been added). Users can of course use their own resources of molecular interactions for as long as they are provided in a format recognizable by LINDA+ (see details here (hyperlink to be added later)). Additionally we provide prior knowledge of interactions tailored specifically towards contextualizing molecular interaction networks in a cardiobiology context (details here (to be added when ready)). For this purpose we have utilized prompt-based data mining of Large Language Models (LLM's), to enhance our biomedical knowledge resources based on a collection 1015 molecular cardiology related manuscripts (see details here (hyperlink to be added later)). Solver LINDA+ requires the interactive version of IBM Cplex as an ILP problem optimiser. The IBM ILOG Cplex is freely available through Academic Initiative . Details about how to obtain the free full license under the Academic Initiative have been provided here . Once the CPLEX solver has been acquired by the user, they must save the executable files in any desired location in the machine they are using and then they can run. Then, thy should make the acquired cplex solver executable, but running the following (in MAC/Unix systems): chmod +x cplex . Finally, you can perform the LINDA+ analyses after specifying the path to the executable file (through the solverPath parameter, see examples below). Installation Once the required solvers have been obtained and the mentioned R-package depedencies have been installed, then the users can proceed with the installation of LINDA. Currently users can install LINDA+ either through GitHub or directly from the source after downloading the source (tar file) and typing one of the following in the R command line: directly from GitHub: devtools::install_github(\"dieterich-lab/LINDAPlus\", build_vignettes = FALSE) or from source: devtools::install_local(path = \"path_to_extracted_LINDAPlus_directory\", build_manual = TRUE, build_vignettes = FALSE, force = TRUE) NOTE: If you wish for the the Vignettes to be built and for the test example to run successfully, please put the cplex executable file under the /Downloads/ directory and only then you can set build_vignettes = TRUE . In the case when building the vignettes is not possible, you can access it here . Upon installation of the package, you can check on the package Vignettes: # check vignettes vignette(\"LINDAPlus\") # check documentation of the main function ?runLINDAPlus","title":"Home"},{"location":"#welcome-to-linda","text":"This is the documentation page of the LINDA+ software.","title":"Welcome to LINDA+"},{"location":"#workflow","text":"LINDA+ is a method used to identify intra- and inter-cellular interaction networks at a domain resolution, allowing to further study the effects of Alternative Splicing (AS) on signalling. It is a tool that integrates large-scale knowledge of directed joint interactions (protein-protein and Domain-Domain intra-cellular interactions) as well as structurally resolved ligand-receptor pairs from various resources with estimated transcription factor enzymatic activities based on sc-RNAseq reads (see Figure 1. ). Figure 1: LINDA+ Pipeline At the core of LINDA+ stands an optimization problem, formulated as an Integer Linear Programming (ILP), which allows for joint mechanistic analysis of inter- and intra-cellular protein interaction networks based on scRNAseq data.","title":"Workflow"},{"location":"#dependencies","text":"","title":"Dependencies"},{"location":"#resources","text":"LINDA+ relies the following resources for performing it's analysis: Resources of protein interactions at a domain resolution level: By default, LINDA+ uses DIGGER as a resource of joint Protein-Protein (PPI) and Domain-Domain (DDI) interactions in human. This allows LINDA+ to mechanistically characterize effects that post-transcriptional processes, such as alternative splicing, might have on protein interaction networks. Resources of ligand-receptor pairs: Several ligand-receptor interaction resources have been integrated in LINDA+, including: CellChat , CellPhoneDB , CellTalkDB and LIANA . For LINDA+, we have additionally annotated extracellular domains of the receptors, through which the ligands would be able to interact. Resources of transcription factors (TF) to gene relations: LINDA+ additionally relies on known tf-to-gene relations in order to: i) Determine significantly regulated TF's based on gene-expression values for each cell-type; and ii) Identifying what kinds of ligand genes do these TF's regulate and which can then be secreted into the extra-cellular space. Two types of human tf-to-gene resources have been integrated in LINDA+: DoRothEA and TfLink . All of the above resources have been integrated in the LINDA+ R-package and details about how combinations of each type of resource can be used for a real-case application of LINDA+ can be found in the Tutorials (hyperlinked once tutorials have been added). Users can of course use their own resources of molecular interactions for as long as they are provided in a format recognizable by LINDA+ (see details here (hyperlink to be added later)). Additionally we provide prior knowledge of interactions tailored specifically towards contextualizing molecular interaction networks in a cardiobiology context (details here (to be added when ready)). For this purpose we have utilized prompt-based data mining of Large Language Models (LLM's), to enhance our biomedical knowledge resources based on a collection 1015 molecular cardiology related manuscripts (see details here (hyperlink to be added later)).","title":"Resources"},{"location":"#solver","text":"LINDA+ requires the interactive version of IBM Cplex as an ILP problem optimiser. The IBM ILOG Cplex is freely available through Academic Initiative . Details about how to obtain the free full license under the Academic Initiative have been provided here . Once the CPLEX solver has been acquired by the user, they must save the executable files in any desired location in the machine they are using and then they can run. Then, thy should make the acquired cplex solver executable, but running the following (in MAC/Unix systems): chmod +x cplex . Finally, you can perform the LINDA+ analyses after specifying the path to the executable file (through the solverPath parameter, see examples below).","title":"Solver"},{"location":"#installation","text":"Once the required solvers have been obtained and the mentioned R-package depedencies have been installed, then the users can proceed with the installation of LINDA. Currently users can install LINDA+ either through GitHub or directly from the source after downloading the source (tar file) and typing one of the following in the R command line: directly from GitHub: devtools::install_github(\"dieterich-lab/LINDAPlus\", build_vignettes = FALSE) or from source: devtools::install_local(path = \"path_to_extracted_LINDAPlus_directory\", build_manual = TRUE, build_vignettes = FALSE, force = TRUE) NOTE: If you wish for the the Vignettes to be built and for the test example to run successfully, please put the cplex executable file under the /Downloads/ directory and only then you can set build_vignettes = TRUE . In the case when building the vignettes is not possible, you can access it here . Upon installation of the package, you can check on the package Vignettes: # check vignettes vignette(\"LINDAPlus\") # check documentation of the main function ?runLINDAPlus","title":"Installation"},{"location":"about/","text":"Ut accepto bella secretaque viroque ducat admonitu Namque unde udaeque absens Lorem markdownum quod e templum vocem ver! Terra certe facinus: grandia non neganda; et non duc quibus iuga exhalantem inrita, reperire. Manet sed sororis Cressa parentis libet clavae diemque. Mirantem sanctius serpentigenis, ciet sacra , quid sum patriam extemplo. Undis post haud placabitis mihi fecit ab Ceu metuens vallis peremi et pater gelidos tertius! Pererrato erat articulos non primumque carmen frustra, ecce! Illuc cursus parte centum Aeas formas , hosti, referre Tenos, ducibusque et quoniam ametur est et audes! Dant tradat media: pabula fuit, color, altera, usus tecta. Iacentes fateor prohibebere, cedunt veteres. Erubuit sit Refert praeferre viri. Usa pars tuti tumor demittitur glomeravit tuentem : negat hanc. Ab quater puerilibus quod: non sanguine quae, quos clipeum, plura accipis Zancleia; itum finem abstemius. Suam ubere Deductus visa longoque, peragentem antris quoque rore, per et. Caelestes restabat? Regia sua nitido tempus peperisse deposito brumalis rates pariter munera. Nihil steterant albentia victa concepit ingeniis, aliae herbarum saecula; et umore ! Quia exierit, in serta inportuna a cepisse iecur; sub Nereidum arbore pictasque. Ense ut operatus conata Crinitas caespes inquinat nactus vulnere iactura Ire quae Unda suae dicat Vestigia solent longi annua Ense clauserat Parsque ab aede eque Urbi adeunda cernunt quoque oculosque plangore aquis, sed tigride trahit et fugae et suorum Midae? Iam canum mos. Cum dicere sanguine. Cavas reliquerat spondere nunc; quas nulla gemitus; raucaque terrae it fata. Simulatque certa lumen dentibus et arcus mihi missa silvae: culmine prolem. Superosque illic Cyllenius fuit undis Sub hausit fugae Adhuc vocalibus vestes elusaque pressoque custos Promissa consitor sed Truncus alta bimari unus inter aere columbis nec naidas , nescio mundum, monstra ereptaque et recessit et obice qua. Iuvenalia imas in inclamare sponte, laudat, mortalia verbis reppulit, sub per lacrimis illa Procne.","title":"About"},{"location":"about/#ut-accepto-bella-secretaque-viroque-ducat-admonitu","text":"","title":"Ut accepto bella secretaque viroque ducat admonitu"},{"location":"about/#namque-unde-udaeque-absens","text":"Lorem markdownum quod e templum vocem ver! Terra certe facinus: grandia non neganda; et non duc quibus iuga exhalantem inrita, reperire. Manet sed sororis Cressa parentis libet clavae diemque. Mirantem sanctius serpentigenis, ciet sacra , quid sum patriam extemplo.","title":"Namque unde udaeque absens"},{"location":"about/#undis-post-haud-placabitis-mihi-fecit-ab","text":"Ceu metuens vallis peremi et pater gelidos tertius! Pererrato erat articulos non primumque carmen frustra, ecce! Illuc cursus parte centum Aeas formas , hosti, referre Tenos, ducibusque et quoniam ametur est et audes! Dant tradat media: pabula fuit, color, altera, usus tecta. Iacentes fateor prohibebere, cedunt veteres.","title":"Undis post haud placabitis mihi fecit ab"},{"location":"about/#erubuit-sit","text":"Refert praeferre viri. Usa pars tuti tumor demittitur glomeravit tuentem : negat hanc. Ab quater puerilibus quod: non sanguine quae, quos clipeum, plura accipis Zancleia; itum finem abstemius.","title":"Erubuit sit"},{"location":"about/#suam-ubere","text":"Deductus visa longoque, peragentem antris quoque rore, per et. Caelestes restabat? Regia sua nitido tempus peperisse deposito brumalis rates pariter munera. Nihil steterant albentia victa concepit ingeniis, aliae herbarum saecula; et umore ! Quia exierit, in serta inportuna a cepisse iecur; sub Nereidum arbore pictasque. Ense ut operatus conata Crinitas caespes inquinat nactus vulnere iactura Ire quae Unda suae dicat Vestigia solent longi annua Ense clauserat","title":"Suam ubere"},{"location":"about/#parsque-ab-aede-eque","text":"Urbi adeunda cernunt quoque oculosque plangore aquis, sed tigride trahit et fugae et suorum Midae? Iam canum mos. Cum dicere sanguine. Cavas reliquerat spondere nunc; quas nulla gemitus; raucaque terrae it fata. Simulatque certa lumen dentibus et arcus mihi missa silvae: culmine prolem. Superosque illic Cyllenius fuit undis Sub hausit fugae Adhuc vocalibus vestes elusaque pressoque custos Promissa consitor sed Truncus alta bimari unus inter aere columbis nec naidas , nescio mundum, monstra ereptaque et recessit et obice qua. Iuvenalia imas in inclamare sponte, laudat, mortalia verbis reppulit, sub per lacrimis illa Procne.","title":"Parsque ab aede eque"},{"location":"download/","text":"Ut accepto bella secretaque viroque ducat admonitu Namque unde udaeque absens Lorem markdownum quod e templum vocem ver! Terra certe facinus: grandia non neganda; et non duc quibus iuga exhalantem inrita, reperire. Manet sed sororis Cressa parentis libet clavae diemque. Mirantem sanctius serpentigenis, ciet sacra , quid sum patriam extemplo. Undis post haud placabitis mihi fecit ab Ceu metuens vallis peremi et pater gelidos tertius! Pererrato erat articulos non primumque carmen frustra, ecce! Illuc cursus parte centum Aeas formas , hosti, referre Tenos, ducibusque et quoniam ametur est et audes! Dant tradat media: pabula fuit, color, altera, usus tecta. Iacentes fateor prohibebere, cedunt veteres. Erubuit sit Refert praeferre viri. Usa pars tuti tumor demittitur glomeravit tuentem : negat hanc. Ab quater puerilibus quod: non sanguine quae, quos clipeum, plura accipis Zancleia; itum finem abstemius. Suam ubere Deductus visa longoque, peragentem antris quoque rore, per et. Caelestes restabat? Regia sua nitido tempus peperisse deposito brumalis rates pariter munera. Nihil steterant albentia victa concepit ingeniis, aliae herbarum saecula; et umore ! Quia exierit, in serta inportuna a cepisse iecur; sub Nereidum arbore pictasque. Ense ut operatus conata Crinitas caespes inquinat nactus vulnere iactura Ire quae Unda suae dicat Vestigia solent longi annua Ense clauserat Parsque ab aede eque Urbi adeunda cernunt quoque oculosque plangore aquis, sed tigride trahit et fugae et suorum Midae? Iam canum mos. Cum dicere sanguine. Cavas reliquerat spondere nunc; quas nulla gemitus; raucaque terrae it fata. Simulatque certa lumen dentibus et arcus mihi missa silvae: culmine prolem. Superosque illic Cyllenius fuit undis Sub hausit fugae Adhuc vocalibus vestes elusaque pressoque custos Promissa consitor sed Truncus alta bimari unus inter aere columbis nec naidas , nescio mundum, monstra ereptaque et recessit et obice qua. Iuvenalia imas in inclamare sponte, laudat, mortalia verbis reppulit, sub per lacrimis illa Procne.","title":"Downloads"},{"location":"download/#ut-accepto-bella-secretaque-viroque-ducat-admonitu","text":"","title":"Ut accepto bella secretaque viroque ducat admonitu"},{"location":"download/#namque-unde-udaeque-absens","text":"Lorem markdownum quod e templum vocem ver! Terra certe facinus: grandia non neganda; et non duc quibus iuga exhalantem inrita, reperire. Manet sed sororis Cressa parentis libet clavae diemque. Mirantem sanctius serpentigenis, ciet sacra , quid sum patriam extemplo.","title":"Namque unde udaeque absens"},{"location":"download/#undis-post-haud-placabitis-mihi-fecit-ab","text":"Ceu metuens vallis peremi et pater gelidos tertius! Pererrato erat articulos non primumque carmen frustra, ecce! Illuc cursus parte centum Aeas formas , hosti, referre Tenos, ducibusque et quoniam ametur est et audes! Dant tradat media: pabula fuit, color, altera, usus tecta. Iacentes fateor prohibebere, cedunt veteres.","title":"Undis post haud placabitis mihi fecit ab"},{"location":"download/#erubuit-sit","text":"Refert praeferre viri. Usa pars tuti tumor demittitur glomeravit tuentem : negat hanc. Ab quater puerilibus quod: non sanguine quae, quos clipeum, plura accipis Zancleia; itum finem abstemius.","title":"Erubuit sit"},{"location":"download/#suam-ubere","text":"Deductus visa longoque, peragentem antris quoque rore, per et. Caelestes restabat? Regia sua nitido tempus peperisse deposito brumalis rates pariter munera. Nihil steterant albentia victa concepit ingeniis, aliae herbarum saecula; et umore ! Quia exierit, in serta inportuna a cepisse iecur; sub Nereidum arbore pictasque. Ense ut operatus conata Crinitas caespes inquinat nactus vulnere iactura Ire quae Unda suae dicat Vestigia solent longi annua Ense clauserat","title":"Suam ubere"},{"location":"download/#parsque-ab-aede-eque","text":"Urbi adeunda cernunt quoque oculosque plangore aquis, sed tigride trahit et fugae et suorum Midae? Iam canum mos. Cum dicere sanguine. Cavas reliquerat spondere nunc; quas nulla gemitus; raucaque terrae it fata. Simulatque certa lumen dentibus et arcus mihi missa silvae: culmine prolem. Superosque illic Cyllenius fuit undis Sub hausit fugae Adhuc vocalibus vestes elusaque pressoque custos Promissa consitor sed Truncus alta bimari unus inter aere columbis nec naidas , nescio mundum, monstra ereptaque et recessit et obice qua. Iuvenalia imas in inclamare sponte, laudat, mortalia verbis reppulit, sub per lacrimis illa Procne.","title":"Parsque ab aede eque"},{"location":"tutorial/","text":"Tutorials Here are provided tutorials about how to use LINDA+ R-package in it's basic form as well as all of it's implemented features. We start by first describing the inputs that are to be given for a LINDA+ analysis, followed by tutorial examples of each feature on a small Toy example to then follow with a real-case application. Inputs The main function in LINDA+ that is used to perform the network inference analysis is runLINDAPlus() and which can take the following inputs: Mandatory Inputs: background.networks.list : The list consists of two elements: a) background.networks : This should be a named (cell-types) list containing data-frames joint PPI-DDI's for each cell-type. Each data-frame represents the set of interaction knowledge for each cell-type and it should contain at least 4 columns with the following ID's: 'pfam_source', 'pfam_target', gene_source' and 'gene_target'. In the case where we have no name for a specific domain or where this is not applicable, please set the corresponding values in the 'pfam_source' or 'pfam_target' as NA's (for more details, see in the examples); and b) ligand.receptors : This also should be a named list ('ligands' and 'receptors') which contains character vectors where the set of elements that corresponds to Ligands and Receptors have been defined as such. tf.scores : This information should be provided as a named list (for each cell-type) and which contains data-frames indicating the enrichment scores for each TF at each cell-type. The data-frames should contain at least two columns: 'tf' (indicating the TF ID) and the numerical 'score' (indicating the enrichment scores for each TF). Optional Inputs: lr.scores : This information can be provided as a named list (for each cell-type) and which contains data-frames indicating scores that can be assigned to each ligand-receptor interactions targeting a specific cell. The scores should be provided from 0 to 1. The higher the score assigned to a ligand-receptor interaction, the more likely it is for it to be present in the network solution, while in the case of a score of 0, this will force LINDA+ to not include such an interaction in the solution for a specific indicated cell-type. ligand.scores : A data-frame object which should contain two columns: 'ligands' (providing the ligand ID's) and 'score' (providing the score associated to each ligand, i.e. abundance). The scores should be provided between 0 and 1 and the higher the score of the ligand, the more likely it will be for a ligand to appear in the solution. A score of 0, means that this ligand will not be able to perturb any receptor of any cell-type. ccc.scores : A data-frame object which should contain two columns: 'ccc' (providing pairs of interacting cell-types, i.e. \"CellA=CellB\" for the case when CellA communicates with CellB ) and 'score' (providing the score associated to each communicating cell pair). The scores should be provided between 0 and 1 and the higher the score a cell-cell interaction, the more likely it will be for the source cell-type to communicate to the target cell-type. A score of 0, means that the defined source cell-type will not talk to the defined target cell-type. as.input : A data-frame object which should contain four columns: 'cell_type' (defining the cell-type in which the splicing effect is happening), 'proteinID' (defining the name of the protein affected by splicing), 'domainID' (defining the PFAM identifier of the protein domain that has been affected by splicing) and 'effect' (defining the type of effect that the alternative splicing has on this specific domain: either exclusion or inclusion ). In the case of exclusion effect, the corresponding domain will be conidered as skipped and not involved in any of the domain interactions. In the case of inclusion , the defined domain will be present in the solution as an interactor. solverPath : Here is provided the location path to the desired solver. By default, the path to the cplex solver is set to: solverPath = \"/usr/bin/cplex\" . top.tf : A named numerical vector defining how many TF's should be considered as significantly enriched for each of the tables provided in the tf.scores input. The names of the elements in the vector should correspond to the desired cell-types. By default, top.tf = NULL , in which case all the TF's given in the tf.scores list across each cell-type willbe considered as significantly enriched. lambda1 :","title":"Tutorials"},{"location":"tutorial/#tutorials","text":"Here are provided tutorials about how to use LINDA+ R-package in it's basic form as well as all of it's implemented features. We start by first describing the inputs that are to be given for a LINDA+ analysis, followed by tutorial examples of each feature on a small Toy example to then follow with a real-case application.","title":"Tutorials"},{"location":"tutorial/#inputs","text":"The main function in LINDA+ that is used to perform the network inference analysis is runLINDAPlus() and which can take the following inputs: Mandatory Inputs: background.networks.list : The list consists of two elements: a) background.networks : This should be a named (cell-types) list containing data-frames joint PPI-DDI's for each cell-type. Each data-frame represents the set of interaction knowledge for each cell-type and it should contain at least 4 columns with the following ID's: 'pfam_source', 'pfam_target', gene_source' and 'gene_target'. In the case where we have no name for a specific domain or where this is not applicable, please set the corresponding values in the 'pfam_source' or 'pfam_target' as NA's (for more details, see in the examples); and b) ligand.receptors : This also should be a named list ('ligands' and 'receptors') which contains character vectors where the set of elements that corresponds to Ligands and Receptors have been defined as such. tf.scores : This information should be provided as a named list (for each cell-type) and which contains data-frames indicating the enrichment scores for each TF at each cell-type. The data-frames should contain at least two columns: 'tf' (indicating the TF ID) and the numerical 'score' (indicating the enrichment scores for each TF). Optional Inputs: lr.scores : This information can be provided as a named list (for each cell-type) and which contains data-frames indicating scores that can be assigned to each ligand-receptor interactions targeting a specific cell. The scores should be provided from 0 to 1. The higher the score assigned to a ligand-receptor interaction, the more likely it is for it to be present in the network solution, while in the case of a score of 0, this will force LINDA+ to not include such an interaction in the solution for a specific indicated cell-type. ligand.scores : A data-frame object which should contain two columns: 'ligands' (providing the ligand ID's) and 'score' (providing the score associated to each ligand, i.e. abundance). The scores should be provided between 0 and 1 and the higher the score of the ligand, the more likely it will be for a ligand to appear in the solution. A score of 0, means that this ligand will not be able to perturb any receptor of any cell-type. ccc.scores : A data-frame object which should contain two columns: 'ccc' (providing pairs of interacting cell-types, i.e. \"CellA=CellB\" for the case when CellA communicates with CellB ) and 'score' (providing the score associated to each communicating cell pair). The scores should be provided between 0 and 1 and the higher the score a cell-cell interaction, the more likely it will be for the source cell-type to communicate to the target cell-type. A score of 0, means that the defined source cell-type will not talk to the defined target cell-type. as.input : A data-frame object which should contain four columns: 'cell_type' (defining the cell-type in which the splicing effect is happening), 'proteinID' (defining the name of the protein affected by splicing), 'domainID' (defining the PFAM identifier of the protein domain that has been affected by splicing) and 'effect' (defining the type of effect that the alternative splicing has on this specific domain: either exclusion or inclusion ). In the case of exclusion effect, the corresponding domain will be conidered as skipped and not involved in any of the domain interactions. In the case of inclusion , the defined domain will be present in the solution as an interactor. solverPath : Here is provided the location path to the desired solver. By default, the path to the cplex solver is set to: solverPath = \"/usr/bin/cplex\" . top.tf : A named numerical vector defining how many TF's should be considered as significantly enriched for each of the tables provided in the tf.scores input. The names of the elements in the vector should correspond to the desired cell-types. By default, top.tf = NULL , in which case all the TF's given in the tf.scores list across each cell-type willbe considered as significantly enriched. lambda1 :","title":"Inputs"}]}